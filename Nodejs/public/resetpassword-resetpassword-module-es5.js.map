{"version":3,"sources":["src/app/resetpassword/fogotpwd/fogotpwd.component.html","src/app/resetpassword/resetpwd/resetpwd.component.html","src/app/resetpassword/fogotpwd/fogotpwd.component.css","src/app/resetpassword/fogotpwd/fogotpwd.component.ts","src/app/resetpassword/resetpassword.module.ts","src/app/resetpassword/resetpwd/resetpwd.component.css","src/app/resetpassword/resetpwd/resetpwd.component.ts","src/app/resetpassword/resetpwdrouter/resetpwdrouter.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<!-- <link rel=\\\"stylesheet\\\" href=\\\"https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css\\\"> -->\\n<div class=\\\"form-gap\\\">\\n    <div class=\\\"container \\\" >\\n        <div class=\\\"row\\\"  style=\\\"padding-left: 20%;\\\">\\n            <div class=\\\"col-md-6 col-md-offset-6\\\"  >\\n                <div class=\\\"panel panel-default\\\" >\\n                    <div class=\\\"panel-body\\\">\\n                        <div class=\\\"text-center\\\">\\n                            <h3><i class=\\\"fa fa-lock fa-4x\\\"></i></h3>\\n                            <h2 class=\\\"text-center\\\">Forgot Password?</h2>\\n                            <p>You can reset your password here.</p>\\n                            <div class=\\\"panel-body\\\">\\n\\n                                <form [formGroup]=\\\"ForgotForm\\\" class=\\\"form\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <div class=\\\"input-group\\\">\\n                                            <span class=\\\"input-group-addon\\\"><i\\n                                                    class=\\\"glyphicon glyphicon-envelope color-blue\\\"></i></span>\\n                                            <input name=\\\"email\\\" placeholder=\\\"Enter Email Address\\\" class=\\\"form-control\\\"\\n                                                type=\\\"email\\\" formControlName=\\\"email\\\" required>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"error\\\" *ngIf=\\\"serverErrorMessagesEmail\\\">\\n                                        {{serverErrorMessagesEmail}}\\n                                    </div>\\n                                    <div class=\\\"form-group\\\">\\n                                        <input type=\\\"button\\\" name=\\\"recover-submit\\\"\\n                                            class=\\\"btn btn-lg btn-primary btn-block\\\" value=\\\"Reset Password\\\"\\n                                            (click)=\\\"forGotPwd()\\\">\\n                                    </div>\\n                                    <div class=\\\"success\\\" *ngIf=\\\"successMessage\\\">\\n                                        {{successMessage}} <a href=\\\"https://mail.google.com\\\" target=\\\"_blank\\\">Login</a>\\n                                    </div>\\n                                </form><br />\\n                                <span class=\\\"psw\\\">Create An Account <a href=\\\"/register\\\">sinup</a></span>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export default \"<!-- <link rel=\\\"stylesheet\\\" href=\\\"https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css\\\"> -->\\n<div class=\\\"form-gap\\\"></div>\\n<div class=\\\"container\\\">\\n    <div class=\\\"row\\\" style=\\\"padding-left: 20%;\\\">\\n        <div class=\\\"col-md-6 col-md-offset-6\\\">\\n            <div class=\\\"panel panel-default\\\">\\n                <div class=\\\"panel-body\\\">\\n                    <div class=\\\"text-center\\\">\\n                        <h3><i class=\\\"fa fa-lock fa-4x\\\"></i></h3>\\n                        <h2 class=\\\"text-center\\\">Reset - Password?</h2>\\n                        <p>You can reset your password here.</p>\\n                        <div class=\\\"panel-body\\\">\\n\\n                            <form [formGroup]=\\\"ResetForm\\\" class=\\\"form\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <div class=\\\"input-group\\\">\\n                                        <span class=\\\"input-group-addon\\\"><i\\n                                                class=\\\"glyphicon glyphicon-envelope color-blue\\\"></i></span>\\n                                        <input name=\\\"password\\\" placeholder=\\\"New-Password \\\" class=\\\"form-control\\\"\\n                                            type=\\\"password\\\" formControlName=\\\"password\\\" required>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <div class=\\\"input-group\\\">\\n                                        <span class=\\\"input-group-addon\\\"><i\\n                                                class=\\\"glyphicon glyphicon-envelope color-blue\\\"></i></span>\\n                                        <input name=\\\"confirmpassword\\\" placeholder=\\\"confirmpassword \\\"\\n                                            class=\\\"form-control\\\" type=\\\"confirmpassword\\\"\\n                                            formControlName=\\\"confirmpassword\\\" required>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"error\\\" *ngIf=\\\"serverErrorMessagesEmail\\\">\\n                                    {{serverErrorMessagesEmail}}\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <input type=\\\"button\\\" name=\\\"recover-submit\\\" class=\\\"btn btn-lg btn-primary btn-block\\\"\\n                                        value=\\\"Reset Password\\\" (click)=\\\"resetPwd()\\\">\\n                                </div>\\n                            </form>\\n                            <span class=\\\"psw\\\">Re-Generate <a href=\\\"/forgotpwd\\\">Token</a></span>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export default \".form-gap {\\r\\n    padding-top: 70px;\\r\\n}\\r\\n.error{\\r\\n    font-style: italic;\\r\\n    color: red;\\r\\n}\\r\\nh2{\\r\\n    color: springgreen;\\r\\n}\\r\\n.success{\\r\\n    color:rgb(100, 236, 9);\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVzZXRwYXNzd29yZC9mb2dvdHB3ZC9mb2dvdHB3ZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksaUJBQWlCO0FBQ3JCO0FBQ0E7SUFDSSxrQkFBa0I7SUFDbEIsVUFBVTtBQUNkO0FBQ0E7SUFDSSxrQkFBa0I7QUFDdEI7QUFDQTtJQUNJLHNCQUFzQjtBQUMxQiIsImZpbGUiOiJzcmMvYXBwL3Jlc2V0cGFzc3dvcmQvZm9nb3Rwd2QvZm9nb3Rwd2QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mb3JtLWdhcCB7XHJcbiAgICBwYWRkaW5nLXRvcDogNzBweDtcclxufVxyXG4uZXJyb3J7XHJcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XHJcbiAgICBjb2xvcjogcmVkO1xyXG59XHJcbmgye1xyXG4gICAgY29sb3I6IHNwcmluZ2dyZWVuO1xyXG59XHJcbi5zdWNjZXNze1xyXG4gICAgY29sb3I6cmdiKDEwMCwgMjM2LCA5KTtcclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { LoginandregistrationService } from '../../services/loginandregistration.service'\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-fogotpwd',\n  templateUrl: './fogotpwd.component.html',\n  styleUrls: ['./fogotpwd.component.css']\n})\nexport class FogotpwdComponent implements OnInit {\n  serverErrorMessagesEmail: string;\n  successMessage: String;\n  constructor(private service: LoginandregistrationService,\n    private formBuilder: FormBuilder,\n    private _router: Router,\n    private _activatedRoute: ActivatedRoute) { }\n\n  ForgotForm: FormGroup;\n  ngOnInit() {\n    this.ForgotForm = this.formBuilder.group({\n      email: ['', [Validators.required]],\n    })\n  }\n\n  forGotPwd() {\n    this.service.forGotPwd(this.ForgotForm.value).subscribe(\n      res => {\n        this.successMessage = \"Please Check Your Mail\";\n        // this._router.navigateByUrl('/reset')\n      },\n      error => {\n        // console.log(error);\n        this.serverErrorMessagesEmail = error.message;\n      }\n    )\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ResetpwdComponent } from './resetpwd/resetpwd.component';\n\nimport {SharedModule} from '../shared/shared.module';\nimport{ResetpwdrouterModule} from './resetpwdrouter/resetpwdrouter.module';\nimport { FogotpwdComponent } from './fogotpwd/fogotpwd.component'\n\n@NgModule({\n  declarations: [ResetpwdComponent, FogotpwdComponent],\n  imports: [\n    CommonModule,\n    ResetpwdrouterModule,\n    SharedModule\n  ]\n})\nexport class ResetpasswordModule { }\n","export default \".form-gap {\\r\\n    padding-top: 70px;\\r\\n}\\r\\n.error{\\r\\n    font-style: italic;\\r\\n    color: red;\\r\\n}\\r\\nh2{\\r\\n    color: springgreen;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVzZXRwYXNzd29yZC9yZXNldHB3ZC9yZXNldHB3ZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksaUJBQWlCO0FBQ3JCO0FBQ0E7SUFDSSxrQkFBa0I7SUFDbEIsVUFBVTtBQUNkO0FBQ0E7SUFDSSxrQkFBa0I7QUFDdEIiLCJmaWxlIjoic3JjL2FwcC9yZXNldHBhc3N3b3JkL3Jlc2V0cHdkL3Jlc2V0cHdkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9ybS1nYXAge1xyXG4gICAgcGFkZGluZy10b3A6IDcwcHg7XHJcbn1cclxuLmVycm9ye1xyXG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xyXG4gICAgY29sb3I6IHJlZDtcclxufVxyXG5oMntcclxuICAgIGNvbG9yOiBzcHJpbmdncmVlbjtcclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { LoginandregistrationService } from '../../services/loginandregistration.service'\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-resetpwd',\n  templateUrl: './resetpwd.component.html',\n  styleUrls: ['./resetpwd.component.css']\n})\nexport class ResetpwdComponent implements OnInit {\n\n  serverErrorMessagesEmail: string;\n  constructor(private service: LoginandregistrationService,\n    private formBuilder: FormBuilder,\n    private _router: Router,\n    private _activatedRoute: ActivatedRoute) { }\n\n  ResetForm: FormGroup;\n\n  public token = \"\";\n  ngOnInit() {\n    this.token = this._activatedRoute.snapshot.paramMap.get(\"token\")\n    // console.log(\"token:\",this.token);\n    this._router.navigateByUrl('/forgotpwd/reset/' + this.token);\n\n    this.ResetForm = this.formBuilder.group({\n      password: ['', [Validators.required]],\n      confirmpassword: ['', [Validators.required]],\n    })\n\n  }\n\n  resetPwd() {\n    console.log(\"token\", this.token);\n    this.service.resetPwd(this.ResetForm.value,this.token).subscribe(\n      res=>{\n        this._router.navigateByUrl(\"\");\n      },\n      error=>{\n        console.log(error)\n        this.serverErrorMessagesEmail=error.message;\n      }\n    )\n  }\n}\n","\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ResetpwdComponent } from '../resetpwd/resetpwd.component';\nimport { FogotpwdComponent } from '../fogotpwd/fogotpwd.component'\n\n\nconst routes: Routes = [\n  {path:'',component:FogotpwdComponent}, \n  {path:'reset/:token',component:ResetpwdComponent}  \n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ResetpwdrouterModule { }\n"],"sourceRoot":"webpack:///","file":"resetpassword-resetpassword-module-es5.js"}