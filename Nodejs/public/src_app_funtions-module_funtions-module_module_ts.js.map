{"version":3,"file":"src_app_funtions-module_funtions-module_module_ts.js","mappings":"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","sources":["./src/app/funtions-module/functions/functions.component.ts","./src/app/funtions-module/functions/functions.component.html","./src/app/funtions-module/funtions-module.module.ts","./src/app/funtions-module/router-fun-module/router-fun-module.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CrudService } from 'src/app/services/crud.service';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { NestedTreeControl } from '@angular/cdk/tree';\nimport { MatTreeNestedDataSource } from '@angular/material/tree';\n\ninterface FoodNode {\n  name: string;\n  children?: FoodNode[];\n}\n@Component({\n  selector: 'app-functions',\n  templateUrl: './functions.component.html',\n  styleUrls: ['./functions.component.css']\n})\nexport class FunctionsComponent implements OnInit {\n  allData = [];\n  all: boolean;\n  parent = [];\n  timer: NodeJS.Timer;\n  treeValue: string;\n\n  constructor(private src: CrudService, private formBuilder: FormBuilder,) { }\n\n  treeControl = new NestedTreeControl<FoodNode>(node => node.children);\n\n  dataSource = new MatTreeNestedDataSource<FoodNode>();\n  hasChild = (_: number, node: FoodNode) => !!node.children && node.children.length > 0;\n\n  list = <any>[];\n  dynamicForm: FormGroup;\n  ngOnInit() {\n    this.getLIst()\n    this.treeVeiwData();\n    this.allData = [\n      { \"label\": \"Name\", \"type\": \"textbox\", \"options\": [], \"required\": \"false\" },\n      { \"label\": \"Email\", \"type\": \"email\", \"options\": [], \"required\": \"true\" },\n      { \"label\": \"PhoneNumber\", \"type\": \"phone\", \"options\": [], \"required\": \"false\" },\n      { \"label\": \"Desc\", \"type\": \"textaria\", \"options\": [], \"required\": \"false\" },\n      { \"label\": \"CheckBox\", \"type\": \"checkbox\", \"options\": [{ \"id\": \"10\", \"option\": \"check1\" }, { \"id\": \"02\", \"option\": \"check2\" }], \"required\": \"false\" },\n      { \"label\": \"Drop\", \"type\": \"dropdown\", \"options\": [{ \"id\": \"10\", \"option\": \"dropdown\" }, { \"id\": \"02\", \"option\": \"dropdown1\" }], \"required\": \"false\" },\n      { \"label\": \"Radio\", \"type\": \"radio\", \"options\": [{ \"id\": \"10\", \"option\": \"radio\" }, { \"id\": \"02\", \"option\": \"radio1\" }], \"required\": \"false\" },\n      { \"label\": \"Checklist\", \"type\": \"cheklist\", \"options\": [{ \"id\": \"10\", \"option\": \"cheklist\" }, { \"id\": \"02\", \"option\": \"cheklist2\" }], \"required\": \"false\" },\n    ]\n    // console.log(this.allData)\n\n    // Dynamif FormControls && Dynamic Validation\n    let group = {};\n    this.allData.forEach(fileds => {\n      if (fileds.required == \"true\") {\n        if (fileds.type == \"email\") {\n          group[fileds.label] = new FormControl('', [Validators.required, Validators.email]);\n        }\n        else {\n          group[fileds.label] = new FormControl('', [Validators.required]);\n        }\n      }\n      else {\n        if (fileds.type == \"phone\") {\n          group[fileds.label] = new FormControl('', [Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{10}$\")]);\n        } else {\n          group[fileds.label] = new FormControl('');\n        }\n      }\n    })\n    this.dynamicForm = new FormGroup(group);\n  }\n\n  getLIst() {\n    this.src.getEmp().subscribe(res => {\n      this.list = res;\n      // console.log(this.list);\n    })\n  }\n\n  submit() {\n    console.log(this.dynamicForm.value);\n  }\n  tabs() {\n    this.all = true;\n  }\n\n  treeVeiwData() {\n    this.dataSource.data = [\n      {\n        name: 'Fruit',\n        children: [\n          { name: 'Apple' },\n          { name: 'Banana' },\n          { name: 'Fruit loops' },\n        ]\n      }, {\n        name: 'Vegetables',\n        children: [\n          {\n            name: 'Green',\n            children: [\n              { name: 'Broccoli' },\n              { name: 'Brussels sprouts' },\n            ]\n          }, {\n            name: 'Orange',\n            children: [\n              { name: 'Pumpkins' },\n              { name: 'Carrots' },\n            ]\n          },\n        ]\n      },\n    ]\n  }\n  findParh(array, name) {\n    if (typeof array !== 'undefined') {\n      for (let i = 0; i < array.length; i++) {\n        if (array[i].name == name) {\n          this.getPath(this.parent, name)\n          return [array[i]]\n        }\n        const a = this.findParh(array[i].children, name);\n        this.parent.splice(0, this.parent.length);\n        if (a != null) {\n          a.unshift(array[i]);\n          a.forEach(ele => {\n            this.parent.push(ele.name)\n          });\n          clearTimeout(this.timer);\n          this.timer = setTimeout(() => {\n            let val = \"\";\n            this.getPath(this.parent, val)\n          }, 100);\n          return a;\n        }\n      }\n    }\n    return null;\n  }\n  getPath(path, name) {\n    if (name == \"\") {\n      const v=path.toString();\n      const v1=v.replace(/,/g,' => ')\n      this.treeValue=v1;\n    }else{\n      this.treeValue=name;\n    }\n  }\n\n}\n","<mat-card style=\"margin: 10px; max-height: fit-content;\">\n    <mat-tab-group>\n        <mat-tab>\n            <ng-template mat-tab-label>\n                <span>DynamicForm</span>\n            </ng-template>\n            <div class=\"container\">\n                <div class=\"row mt-5 \">\n                    <div [formGroup]=\"dynamicForm\" class=\"col-md-6\" *ngFor=\"let data of allData\">\n                        <div [ngSwitch]=\"data.type\">\n                            <div *ngSwitchCase=\"'textbox'\">\n                                <div class=\"col-md-12 form-group\">\n                                    <label>{{data.label}}:<span *ngIf=\"data.required=='true'\"\n                                            class=\"required\">**</span></label>\n                                    <input class=\"form-control\" type=\"text\" [formControlName]=\"data.label\"\n                                        placeholder=\"pls Enter {{data.label}}\">\n                                    <span class=\"help-block form-error text-danger\" *ngIf=\"dynamicForm.controls[data.label].errors?.required &&\n                                    dynamicForm.controls[data.label].touched \">\n                                        {{data.label}} required\n                                    </span>\n                                </div>\n                            </div>\n                            <div *ngSwitchCase=\"'email'\">\n                                <div class=\"col-md-12 form-group\">\n                                    <label>{{data.label}}:<span *ngIf=\"data.required=='true'\"\n                                            class=\"required\">**</span></label>\n                                    <input class=\"form-control\" type=\"text\" [formControlName]=\"data.label\"\n                                        placeholder=\"pls Enter {{data.label}}\">\n                                    <span class=\"help-block form-error text-danger\" *ngIf=\"dynamicForm.controls[data.label].errors?.required &&\n                                dynamicForm.controls[data.label].touched \">\n                                        {{data.label}} required\n                                    </span>\n                                    <span class=\"help-block form-error text-danger\"\n                                        *ngIf=\"dynamicForm.controls[data.label].hasError('email')\">\n                                        Please Enter valid {{data.label}}\n                                    </span>\n                                </div>\n                            </div>\n                            <div *ngSwitchCase=\"'phone'\">\n                                <div class=\"col-md-12 form-group\">\n                                    <label>{{data.label}}:<span *ngIf=\"data.required=='true'\"\n                                            class=\"required\">**</span></label>\n                                    <input class=\"form-control\" type=\"number\" [formControlName]=\"data.label\"\n                                        placeholder=\"pls Enter {{data.label}}\">\n                                    <span class=\"help-block form-error text-danger\" *ngIf=\"dynamicForm.controls[data.label].errors?.required &&\n                                    dynamicForm.controls[data.label].touched \">\n                                        {{data.label}} is required\n                                    </span>\n                                    <span class=\"help-block form-error text-danger\"\n                                        *ngIf=\"dynamicForm.controls[data.label].hasError('pattern')\">\n                                        Please Enter valid {{data.label}}\n                                    </span>\n                                </div>\n                            </div>\n                            <div *ngSwitchCase=\"'number'\">\n                                <div class=\"col-md-12 form-group\">\n                                    <label>{{data.label}}:<span *ngIf=\"data.required=='true'\"\n                                            class=\"required\">**</span></label>\n                                    <input class=\"form-control\" type=\"number\" [formControlName]=\"data.label\"\n                                        placeholder=\"pls Enter {{data.label}}\">\n                                    <span class=\"help-block form-error text-danger\" *ngIf=\"dynamicForm.controls[data.label].errors?.required &&\n                                    dynamicForm.controls[data.label].touched \">\n                                        {{data.label}} is required\n                                    </span>\n                                    <span class=\"help-block form-error text-danger\"\n                                        *ngIf=\"dynamicForm.controls[data.label].hasError('pattern')\">\n                                        Please Enter valid {{data.label}}\n                                    </span>\n                                </div>\n                            </div>\n                            <div *ngSwitchCase=\"'textaria'\">\n                                <div class=\"col-md-12 form-group\">\n                                    <label>{{data.label}}:<span *ngIf=\"data.required=='true'\"\n                                            class=\"required\">**</span></label>\n                                    <textarea class=\"form-control\" row=\"3\" type=\"text\" [formControlName]=\"data.label\"\n                                        placeholder=\"pls Enter {{data.label}}\">\n                                    </textarea>\n                                    <span class=\"help-block form-error text-danger\" *ngIf=\"dynamicForm.controls[data.label].errors?.required &&\n                                    dynamicForm.controls[data.label].touched \">\n                                        {{data.label}} required\n                                    </span>\n                                </div>\n                            </div>\n                            <div *ngSwitchCase=\"'paragrap'\">\n                                <div class=\"col-md-12 form-group\">\n                                    <label>{{data.label}}:<span *ngIf=\"data.required=='true'\"\n                                            class=\"required\">**</span></label>\n                                    <textarea class=\"form-control\" row=\"3\" type=\"text\" [formControlName]=\"data.label\"\n                                        placeholder=\"pls Enter {{data.label}}\">\n                                    </textarea>\n                                    <span class=\"help-block form-error text-danger\" *ngIf=\"dynamicForm.controls[data.label].errors?.required &&\n                                    dynamicForm.controls[data.label].touched \">\n                                        {{data.label}} required\n                                    </span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"d-flex justify-content-end\">\n                    <button class=\"btn btn-primary mr-3\" (click)=\"submit()\"\n                        [disabled]=\"!dynamicForm.valid\">Submit</button>\n                    <button class=\"btn btn-primary mr-3\" (click)=\"tabs()\">tabs</button>\n                </div>\n            </div>\n\n        </mat-tab>\n        <mat-tab label=\"TreeView\" *ngIf=\"all\">\n            <div class=\"row\">\n                <div class=\"col-md-5\">\n                    <div class=\"card\">\n                        <div class=\"card-body\" style=\"height: 500px; overflow-y: auto;\">\n                            <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" class=\"example-tree\">\n                                <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle>\n                                    <span (click)=\"findParh(dataSource.data,node.name)\" style=\"cursor: pointer;\">\n                                        {{node.name}}</span>\n                                </mat-tree-node>\n                                <mat-nested-tree-node *matTreeNodeDef=\"let node; when: hasChild\">\n                                    <div class=\"mat-tree-node\">\n                                        <button mat-icon-button matTreeNodeToggle\n                                            [attr.aria-label]=\"'Toggle ' + node.name\">\n                                            <mat-icon class=\"mat-icon-rtl-mirror\">\n                                                {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\n                                            </mat-icon>\n                                        </button>\n                                        <span (click)=\"findParh(dataSource.data,node.name)\" style=\"cursor: pointer;\">\n                                            {{node.name}}</span>\n                                    </div>\n                                    <div [class.example-tree-invisible]=\"!treeControl.isExpanded(node)\" role=\"group\">\n                                        <ng-container matTreeNodeOutlet></ng-container>\n                                    </div>\n                                </mat-nested-tree-node>\n                            </mat-tree>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-md-7\">\n                    <div class=\"card\">\n                        <div class=\"card-body\" style=\"height: 500px; overflow-y: auto;\">\n                            <div class=\"row\">\n                                <div class=\"form-group col-md-6\">\n                                    <label>TreeData:</label>\n                                    <input class=\"form-control\" [(ngModel)]=\"treeValue\">\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </mat-tab>\n        <mat-tab label=\"Third\" *ngIf=\"all\"> Content 3 </mat-tab>\n    </mat-tab-group>\n</mat-card>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FunctionsComponent } from './functions/functions.component';\nimport {SharedModule} from '../shared/shared.module';\nimport { RouterFunModuleModule } from './router-fun-module/router-fun-module.module';\n\n\n\n@NgModule({\n  declarations: [FunctionsComponent, ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    RouterFunModuleModule\n  ]\n})\nexport class FuntionsModuleModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FunctionsComponent } from '../functions/functions.component';\n\n\n\nconst routes: Routes = [\n\n  {path:'fun',component:FunctionsComponent},\n\n];\n\n@NgModule({\n  declarations: [],\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\n\nexport class RouterFunModuleModule { }\n"],"names":[],"sourceRoot":"webpack:///"}