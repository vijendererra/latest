{"version":3,"file":"src_app_login-registration_login_module_ts.js","mappings":"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","sources":["./src/app/login-registration/login-registartin-routing/login-registartin-routing.module.ts","./src/app/login-registration/login.module.ts","./src/app/login-registration/login/login.component.ts","./src/app/login-registration/login/login.component.html","./src/app/login-registration/registration/registration.component.ts","./src/app/login-registration/registration/registration.component.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from '../login/login.component';\nimport { RegistrationComponent } from '../registration/registration.component';\n\nconst routes: Routes = [\n  {path:'',component:LoginComponent},\n  {path:'register',component:RegistrationComponent},\n\n];\n\n@NgModule({\n  declarations: [],\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRegistartinRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport { RegistrationComponent } from './registration/registration.component';\n\nimport {SharedModule} from '../shared/shared.module'\nimport{LoginRegistartinRoutingModule} from '../login-registration/login-registartin-routing/login-registartin-routing.module';\nimport { EffectsModule } from '@ngrx/effects';\nimport { LoggedInServce } from './store/login.effects';\n\n\n@NgModule({\n  declarations: [LoginComponent, RegistrationComponent, ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    LoginRegistartinRoutingModule,\n    // EffectsModule.forFeature([LoggedInServce]),\n\n  ]\n})\nexport class LoginModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { LoginandregistrationService } from '../../services/loginandregistration.service';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AppState } from 'src/app/store/app.state';\nimport { Store } from '@ngrx/store';\nimport { loggedIn } from '../store/login.actions';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\n\nexport class LoginComponent implements OnInit {\n\n  serverErrorMessagesEmail: string;\n\n  constructor(private service: LoginandregistrationService,\n    private formBuilder: FormBuilder,\n    private _router: Router,\n    private _activatedRoute: ActivatedRoute,\n    private store:Store<AppState>) { }\n\n  LoginForm: FormGroup;\n  ngOnInit() {\n    // document.getElementById('navbar').style.display='none';\n    // document.getElementById('footer').style.display='none';    \n    if (this.service.isLoggedIn()) {\n\n      this._router.navigateByUrl('/curd');\n    }\n    this.LoginForm = this.formBuilder.group({\n      _id: [''],\n      email: ['', [Validators.required]],\n      password: ['', [Validators.required]],\n    })\n    // this.userLogedIn();\n  }\n  err = [];\n  err1 = []\n  login() {\n    this.sharing();\n    this.service.loginUser(this.LoginForm.value).subscribe(\n      res => {\n        // console.log(res);\n        this.service.setToken(res['token'])\n        this.userLogedIn();\n      },\n      error => {\n        // console.log(error)\n        this.serverErrorMessagesEmail = error.message;\n      }\n    )\n\n  }\n\n  userData: any;\n  url = '';\n  userLogedIn() {\n    this.store.dispatch(loggedIn())\n    // this.service.logedin().subscribe(\n    //   res => {\n    //     this.userData = res;\n    //     // console.log(this.userData);\n    //     localStorage.setItem('name', this.userData.name);\n    //     localStorage.setItem(\"id\", this.userData._id);\n    //     if (this.userData.image != undefined) {\n    //       localStorage.removeItem('profile');\n    //       this.url = \"http://localhost:2020/\" + this.userData.image;\n    //       // console.log(this.url);\n    //       this.service.img(this.url);\n    //     }\n    //     this._router.navigateByUrl('/curd');\n    //   },\n    //   error => {\n    //     this.serverErrorMessagesEmail = error.message;\n    //   }\n    // )\n  }\n\n  sharing() {\n    let v = 123;\n    this.service.sharing(v);\n  }\n\n}\n","<div class=\"signup-form\">\n    <form [formGroup]=\"LoginForm\">\n        <h2>LoginForm</h2>\n\n        <div class=\"form-group\">\n            <input type=\"email\" class=\"form-control\" name=\"email\" placeholder=\"Email\" required=\"required\"\n                formControlName=\"email\">\n        </div>\n        <div class=\"form-group\">\n            <input type=\"password\" class=\"form-control\" name=\"password\" placeholder=\"Password\" required=\"required\"\n                formControlName=\"password\">\n        </div>\n\n        <div class=\"error\" *ngIf=\"serverErrorMessagesEmail\">\n            {{serverErrorMessagesEmail}}\n        </div>\n        <div class=\"form-group\">\n            <button type=\"submit\" class=\"btn btn-success btn-lg btn-block\" [disabled]=\"!LoginForm.valid\" (click)=\"login()\">Login</button>\n\n            <div class=\"text-center\">Forgot <a routerLink=\"/forgotpwd\"  style=\"color:dodgerblue\">password</a></div>\n            <div class=\"text-center\">Create An Account? <a routerLink=\"/register\"  style=\"color:dodgerblue\">sinup</a></div>\n        </div>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { LoginandregistrationService } from '../../services/loginandregistration.service'\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n\n  serverErrorMessagesEmail: string;\n \n  RegForm: FormGroup;\n  constructor(private service: LoginandregistrationService,\n    private formBuilder: FormBuilder,\n    private _router: Router,\n    private _activatedRoute: ActivatedRoute) { }\n\n  count = 0;\n  regform = true;\n  regform1 = false;\n  next = true;\n  return = false;\n  submit = false;\n  all: boolean;\n  ngOnInit() {\n    this.RegForm = this.formBuilder.group({\n      name: ['', [Validators.required]],\n      email: ['', [Validators.required,Validators.email]],\n      password: ['', [Validators.required]],\n      confirmpassword: ['', [Validators.required]],\n      phonenumber: ['', [Validators.required]],\n      address: ['', [Validators.required]],\n      pinnumber: ['', [Validators.required]],\n      pinnumber1: ['', [Validators.required]],\n    })\n  }\n\n \n\n  register() {\n    this.service.postEmp(this.RegForm.value).subscribe(res => {\n      this._router.navigate(['/']);\n    },\n      error => {\n        this.serverErrorMessagesEmail =error.message;\n        console.log(this.serverErrorMessagesEmail);\n      }\n    )\n  }\n\n  increase() {\n    // Custom Validation For Empty Field:\n   \n    if ((this.RegForm.value.name != \"\") && (this.RegForm.value.email != \"\")\n      && (this.RegForm.value.password != \"\") && (this.RegForm.value.confirmpassword != \"\")) {\n      this.all = true;\n    }\n    if (this.all == true) {\n      this.count++;\n      console.log(this.count);\n      if (this.count == 0) {\n        this.submit = false;\n        this.next = true;\n        this.regform = true;\n        this.regform1 = false;\n      }\n      else if (this.count == 1) {\n        this.submit = true;\n        this.next = false;\n        this.return = true;\n        this.regform1 = true;\n        this.regform = false;\n      }\n    }\n  }\n  decrease() {\n    this.count--;\n    console.log(this.count);\n    if (this.count == 0) {\n      this.submit = false;\n      this.next = true;\n      this.return = false;\n      this.regform = true;\n      this.regform1 = false;\n    }\n    else if (this.count == 1) {\n      this.next = true;\n      this.return = true;\n      this.regform1 = true;\n      this.regform = false;\n      this.submit = false;\n    }\n    else if (this.count == 2) {\n      this.submit = true;\n      this.return = true;\n      this.next = false;\n      this.regform1 = false;\n      this.regform = false;\n    }\n    else {\n      this.regform = false;\n      this.regform1 = false;\n    }\n  };\n\n}\n","<div class=\"signup-form\">\n  <form [formGroup]=\"RegForm\" (ngSubmit)=\"register()\">\n    <h2>Register</h2>\n    <p class=\"hint-text\">Create your account. It's free and only takes a minute.</p>\n    <div *ngIf=\"regform\">\n      <div class=\"form-group\">\n        <input type=\"text\" class=\"form-control\" name=\"name\" placeholder=\"Name\" formControlName=\"name\">\n        <div *ngIf=\"(RegForm.get('name').touched )\">\n          <div class=\"alert alert-danger\" *ngIf=\"RegForm.get('name').errors?.required\">\n            Name Required...\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <input type=\"email\" class=\"form-control\" name=\"email\" placeholder=\"Email\" required=\"required\"\n          formControlName=\"email\">\n        <span class=\"text-danger\" *ngIf=\"(RegForm.get('email').touched) && RegForm.get('email').errors?.email\">\n          Email Required...\n        </span>\n        <span class=\"text-danger\" *ngIf=\"RegForm.get('email').errors?.email\">\n          Email Required...\n        </span>\n      </div>\n      <div class=\"form-group\">\n        <input type=\"password\" class=\"form-control\" name=\"password\" placeholder=\"Password\" required=\"required\"\n          formControlName=\"password\">\n\n      </div>\n      <div class=\"form-group\">\n        <input type=\"Confirmpassword\" class=\"form-control\" name=\"confirm_password\" placeholder=\"Confirm Password\"\n          required=\"required\" formControlName=\"confirmpassword\">\n\n      </div>\n    </div>\n    <div *ngIf=\"regform1\">\n      <div class=\"form-group\">\n        <input type=\"Confirmpassword\" class=\"form-control\" name=\"confirm_password\" placeholder=\"phone number\"\n          required=\"required\" formControlName=\"phonenumber\">\n      </div>\n      <div class=\"form-group\">\n        <input type=\"Confirmpassword\" class=\"form-control\" name=\"confirm_password\" placeholder=\"address\"\n          required=\"required\" formControlName=\"address\">\n      </div>\n      <div class=\"form-group\">\n        <input type=\"Confirmpassword\" class=\"form-control\" name=\"confirm_password\" placeholder=\"pinnumber\"\n          required=\"required\" formControlName=\"pinnumber\">\n      </div>\n      <div class=\"form-group\">\n        <label>Please select your gender</label>\n        <div class=\"row\" style=\"margin-left: 5px;\">\n          <label >\n            <input type=\"radio\" value=\"female\" name=\"gender\" formControlName=\"pinnumber1\">\n            Female\n          </label>\n        </div>\n        <div class=\"row\">\n          <label class=\"md-check\">\n            <input type=\"radio\" value=\"male\" name=\"gender\" formControlName=\"pinnumber1\">\n            Male\n          </label>\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group\" *ngIf=\"submit\">\n      <label class=\"form-check-label\"><input type=\"checkbox\" required=\"required\"> I accept the <a href=\"#\"\n          style=\"color:dodgerblue\">Terms of\n          Use</a> &amp; <a href=\"#\" style=\"color:dodgerblue\">Privacy Policy</a></label>\n    </div>\n    <div class=\"error\" *ngIf=\"serverErrorMessagesEmail\">\n      {{serverErrorMessagesEmail}}\n    </div>\n    <div>\n      <button *ngIf=\"next\" type=\"button\" class=\"btn btn-success\" (click)=increase()>Next</button>&nbsp;\n      <button *ngIf=\"return\" type=\"button\" class=\"btn btn-success\" (click)=decrease()>Previous</button>\n      <br />\n    </div>\n    <div class=\"form-group\">\n      <button *ngIf=\"submit\" type=\"submit\" class=\"btn btn-success btn-lg btn-block\">Register Now</button>\n    </div>\n    <div class=\"text-center\">Already have an account? <a routerLink=\"\" style=\"color:dodgerblue\">login</a></div>\n  </form>\n</div>"],"names":[],"sourceRoot":"webpack:///"}